{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/layout/default/default.component.ts","webpack:///src/app/layout/default/default.component.html","webpack:///src/app/layout/default/default.module.ts","webpack:///src/app/modules/admin/admin.component.ts","webpack:///src/app/modules/admin/admin.component.html","webpack:///src/app/modules/customer/customer.component.ts","webpack:///src/app/modules/customer/customer.component.html","webpack:///src/app/modules/dashboard/dashboard.component.ts","webpack:///src/app/modules/dashboard/dashboard.component.html","webpack:///src/app/modules/employee/employee.component.ts","webpack:///src/app/modules/employee/employee.component.html","webpack:///src/app/modules/posts/posts.component.ts","webpack:///src/app/modules/posts/posts.component.html","webpack:///src/app/modules/posts/viewpost/viewpost.component.ts","webpack:///src/app/modules/posts/viewpost/viewpost.component.html","webpack:///src/app/shared/components/footer/footer.component.ts","webpack:///src/app/shared/components/footer/footer.component.html","webpack:///src/app/shared/components/header/header.component.ts","webpack:///src/app/shared/components/header/header.component.html","webpack:///src/app/shared/components/sidebar/sidebar.component.ts","webpack:///src/app/shared/components/sidebar/sidebar.component.html","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","schemas","DefaultComponent","sideBarOpen","sideBarToggler","DefaultModule","AdminComponent","COLORS","NAMES","CustomerComponent","displayedColumns","users","Array","from","length","_","k","createNewUser","dataSource","paginator","sort","event","filterValue","target","value","filter","trim","toLowerCase","firstPage","applyFilter","name","Math","round","random","charAt","toString","progress","color","DashboardComponent","EmployeeComponent","PostsComponent","router","route","navigate","relativeTo","clicked","ViewpostComponent","FooterComponent","HeaderComponent","toggleSideBarForMe","emit","toggleSidebar","SidebarComponent","SharedModule","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DefaultComponent } from './layout/default/default.component';\nimport { PostsComponent } from './modules/posts/posts.component';\nimport { DashboardComponent } from './modules/dashboard/dashboard.component';\nimport { AdminComponent } from './modules/admin/admin.component';\nimport { EmployeeComponent } from './modules/employee/employee.component';\nimport { CustomerComponent } from './modules/customer/customer.component';\nimport { ViewpostComponent } from './modules/posts/viewpost/viewpost.component';\n\n\nconst routes: Routes = [\n  {\n    path:'',\n    component: DefaultComponent,\n    children:[{\n      path:'',\n      component: DashboardComponent\n    },\n  {\n    path:'posts',\n    component: PostsComponent,\n    children:[{\n      path: 'viewpost',\n      component: ViewpostComponent\n    }]\n  },\n  {\n    path:'admin',\n    component: AdminComponent\n  },\n  {\n    path:'employee',\n    component: EmployeeComponent\n  },\n  {\n    path:'customer',\n    component: CustomerComponent\n  }\n  ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'justDial-dashboard';\n}\n","\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DefaultModule } from './layout/default/default.module';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    DefaultModule,\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-default',\n  templateUrl: './default.component.html',\n  styleUrls: ['./default.component.css']\n})\nexport class DefaultComponent implements OnInit {\nsideBarOpen = false;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  sideBarToggler()\n  {\n    if(this.sideBarOpen==false)\n    {\n    this.sideBarOpen=true;\n    }\n    else\n    {\n    this.sideBarOpen=false;\n    }\n  }\n}\n","<app-header (toggleSideBarForMe)=\"sideBarToggler()\"></app-header>\n\n\n<mat-drawer-container>\n    <mat-drawer mode=\"side\" [opened]=\"sideBarOpen\">\n        <app-sidebar></app-sidebar>\n    </mat-drawer>\n    <mat-drawer-content>\n        <router-outlet></router-outlet>\n    </mat-drawer-content>\n</mat-drawer-container>\n\n<app-footer></app-footer>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DefaultComponent } from './default.component';\nimport { DashboardComponent } from 'src/app/modules/dashboard/dashboard.component';\nimport { RouterModule } from '@angular/router';\nimport { PostsComponent } from 'src/app/modules/posts/posts.component';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table'; \nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input'; \nimport { MatIconModule } from '@angular/material/icon';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport {MatButtonModule} from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatListModule } from '@angular/material/list';\nimport { AdminComponent } from 'src/app/modules/admin/admin.component';\nimport { CustomerComponent } from 'src/app/modules/customer/customer.component';\nimport { EmployeeComponent } from 'src/app/modules/employee/employee.component';\nimport {MatCardModule} from '@angular/material/card';\nimport { ViewpostComponent } from 'src/app/modules/posts/viewpost/viewpost.component';\n\n@NgModule({\n  declarations: [\n    DefaultComponent,\n    DashboardComponent,\n    PostsComponent,\n    AdminComponent,\n    CustomerComponent,\n    EmployeeComponent,\n    ViewpostComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    SharedModule,\n    MatSidenavModule,\n    MatDividerModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatMenuModule,\n    MatListModule,\n    MatInputModule,\n    MatTableModule,\n    MatCardModule,\n    MatButtonModule\n  ]\n})\nexport class DefaultModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin works!</p>\n","import { AfterViewInit,ViewChild,Component } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\n\n\nexport interface UserData {\n  id: string;\n  name: string;\n  progress: string;\n  color: string;\n}\n\n/** Constants used to fill up our data base. */\nconst COLORS: string[] = [\n  'maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple', 'fuchsia', 'lime', 'teal',\n  'aqua', 'blue', 'navy', 'black', 'gray'\n];\nconst NAMES: string[] = [\n  'Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack', 'Charlotte', 'Theodore', 'Isla', 'Oliver',\n  'Isabella', 'Jasper', 'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'\n];\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent implements AfterViewInit{\n \n  displayedColumns: string[] = ['id', 'name', 'progress', 'color','action'];\n  dataSource: MatTableDataSource<UserData>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor() {\n    // Create 100 users\n    const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\n\n    // Assign the data to the data source for the table to render\n    this.dataSource = new MatTableDataSource(users);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n\n/** Builds and returns a new User. */\nfunction createNewUser(id: number): UserData {\n  const name = NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n      NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n\n  return {\n    id: id.toString(),\n    name: name,\n    progress: Math.round(Math.random() * 100).toString(),\n    color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n  };\n}","<mat-form-field>\n    <mat-label>Filter</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n  </mat-form-field>\n  \n  <div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n  \n      <!-- ID Column -->\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.id}} </td>\n      </ng-container>\n  \n      <!-- Progress Column -->\n      <ng-container matColumnDef=\"progress\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Progress </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.progress}}% </td>\n      </ng-container>\n  \n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n      </ng-container>\n  \n      <!-- Color Column -->\n      <ng-container matColumnDef=\"color\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Color </th>\n        <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.color\"> {{row.color}} </td>\n      </ng-container>\n\n      <!--Action Column -->\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\n        <td mat-cell *matCellDef=\"let row\" >\n              <button mat-icon-button aria-label=\"Example icon button with a vertical three dot icon\"  [matMenuTriggerFor]=\"menu\">\n                <mat-icon>more_vert</mat-icon>\n              </button>\n              <mat-menu #menu=\"matMenu\">\n                <button mat-menu-item >\n                    <mat-icon [style.color]=\"row.color\" >edit</mat-icon>\n                    Edit\n                </button>\n                <button mat-menu-item>\n                    <mat-icon color=\"warn\">delete</mat-icon>\n                    Delete\n                </button>\n              </mat-menu>\n         </td>\n      </ng-container>\n\n      \n  \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  \n      <!-- Row shown when there is no matching data. -->\n      <tr class=\"mat-row\" *matNoDataRow>\n        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n      </tr>\n    </table>\n  \n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    Line Charts\n</div>\n<mat-divider></mat-divider>\n<div>\n    <div>Line Charts</div>\n    <div>Line Charts</div>\n    <div>Line Charts</div>\n    <div>Line Charts</div>\n</div>\n\n<mat-divider></mat-divider>\n<div>\n    <div>Tabel</div>\n    <div>Charts</div>\n</div>","import { AfterViewInit,ViewChild,Component } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\n\n\nexport interface UserData {\n  id: string;\n  name: string;\n  progress: string;\n  color: string;\n}\n\n/** Constants used to fill up our data base. */\nconst COLORS: string[] = [\n  'maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple', 'fuchsia', 'lime', 'teal',\n  'aqua', 'blue', 'navy', 'black', 'gray'\n];\nconst NAMES: string[] = [\n  'Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack', 'Charlotte', 'Theodore', 'Isla', 'Oliver',\n  'Isabella', 'Jasper', 'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'\n];\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements AfterViewInit{\n \n  displayedColumns: string[] = ['id', 'name', 'progress', 'color','action'];\n  dataSource: MatTableDataSource<UserData>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor() {\n    // Create 100 users\n    const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\n\n    // Assign the data to the data source for the table to render\n    this.dataSource = new MatTableDataSource(users);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n\n/** Builds and returns a new User. */\nfunction createNewUser(id: number): UserData {\n  const name = NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n      NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n\n  return {\n    id: id.toString(),\n    name: name,\n    progress: Math.round(Math.random() * 100).toString(),\n    color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n  };\n}\n","<mat-form-field>\n    <mat-label>Filter</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n  </mat-form-field>\n  \n  <div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n  \n      <!-- ID Column -->\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.id}} </td>\n      </ng-container>\n  \n      <!-- Progress Column -->\n      <ng-container matColumnDef=\"progress\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Progress </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.progress}}% </td>\n      </ng-container>\n  \n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n      </ng-container>\n  \n      <!-- Color Column -->\n      <ng-container matColumnDef=\"color\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Color </th>\n        <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.color\"> {{row.color}} </td>\n      </ng-container>\n\n      <!--Action Column -->\n      <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\n        <td mat-cell *matCellDef=\"let row\" >\n              <button mat-icon-button aria-label=\"Example icon button with a vertical three dot icon\"  [matMenuTriggerFor]=\"menu\">\n                <mat-icon>more_vert</mat-icon>\n              </button>\n              <mat-menu #menu=\"matMenu\">\n                <button mat-menu-item >\n                    <mat-icon [style.color]=\"row.color\" >edit</mat-icon>\n                    Edit\n                </button>\n                <button mat-menu-item>\n                    <mat-icon color=\"warn\">delete</mat-icon>\n                    Delete\n                </button>\n              </mat-menu>\n         </td>\n      </ng-container>\n\n      \n  \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  \n      <!-- Row shown when there is no matching data. -->\n      <tr class=\"mat-row\" *matNoDataRow>\n        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n      </tr>\n    </table>\n  \n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.css']\n})\nexport class PostsComponent implements OnInit {\n\n  constructor(public router:Router,public route:ActivatedRoute) { }\n\n  ngOnInit(): void {\n  }\n  clicked()\n  {\n    this.router.navigate(['viewpost'],{relativeTo:this.route});\n  }\n\n}\n","<div class=\"posts\">\n<mat-card (click)=\"clicked()\">\n    <a mat-list-item routerLinkActive=\"list-item-active\" >\n        Post 1\n    </a>\n</mat-card>\n\n\n<mat-card (click)=\"clicked()\">\n    <a mat-list-item routerLinkActive=\"list-item-active\" >\n        Post 2\n    </a>\n</mat-card>\n\n\n<mat-card (click)=\"clicked()\">\n    <a mat-list-item routerLinkActive=\"list-item-active\" >\n        Post 3\n    </a>\n</mat-card>\n\n<mat-card (click)=\"clicked()\">\n    <a mat-list-item routerLinkActive=\"list-item-active\" >\n        Post 4\n    </a>\n</mat-card>\n\n\n<mat-card (click)=\"clicked()\">\n    <a mat-list-item routerLinkActive=\"list-item-active\" >\n        Post 5\n    </a>\n</mat-card>\n\n</div>\n<div class=\"Post\">\n<router-outlet></router-outlet>\n</div>\n<mat-divider></mat-divider>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-viewpost',\n  templateUrl: './viewpost.component.html',\n  styleUrls: ['./viewpost.component.css']\n})\nexport class ViewpostComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n    <mat-card-header>\n      <div mat-card-avatar class=\"example-header-image\"></div>\n      <mat-card-title>Shiba Inu</mat-card-title>\n      <mat-card-subtitle>Dog Breed</mat-card-subtitle>\n    </mat-card-header>\n    <img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" height=\"300\"  alt=\"Photo of a Shiba Inu\">\n    <mat-card-content>\n      <p>\n        The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n        A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n        bred for hunting.\n      </p>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-button>LIKE</button>\n      <button mat-button>SHARE</button>\n    </mat-card-actions>\n  </mat-card>\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-divider></mat-divider>\n<footer>\n&copy; All rights reserved\n</footer>","import { Component, OnInit, Output ,EventEmitter} from '@angular/core';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  @Output() toggleSideBarForMe: EventEmitter<any> = new EventEmitter();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  toggleSidebar(){\n    this.toggleSideBarForMe.emit();\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row>\n       <button mat-icon-button (click)=\"toggleSidebar()\">\n           <mat-icon>menu</mat-icon>\n       </button>\n       <span>APP LOGO</span>\n       <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"flex-end\">\n           <ul fxLayout=\"row\" fxLayoutGap=\"20px\">\n               <li>\n                   <button mat-icon-button>\n                       <mat-icon>settings</mat-icon>\n                   </button>\n               </li>\n               <li>\n                    <button mat-icon-button>\n                        <mat-icon>help_outline</mat-icon>\n                    </button>\n                </li>\n                <li>\n                    <button mat-button [matMenuTriggerFor]=\"menu\">\n                        <mat-icon>person_outline</mat-icon>\n                    </button>\n                        <mat-menu #menu=\"matMenu\">\n                            <button mat-menu-item>\n                                <mat-icon>exit_to_app</mat-icon>\n                                Sign out\n                            </button>\n                        </mat-menu>\n                </li>\n           </ul>\n       </div>\n    </mat-toolbar-row>\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-nav-list>\n    <div class=\"profile-card\">\n        <div class=\"header\">\n            <h2>Omkar Ananda Powar</h2>\n            <h4>example@gmail.com</h4>\n        </div>\n        <img src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"img\" >\n    </div>\n\n\n<mat-divider></mat-divider>\n\n<h2 matSubheader>Pages</h2>\n\n<a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"/\">Dashboard</a>\n<a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"/admin\">Admin</a>\n<a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"/employee\">Employee</a>\n<a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"/customer\">Customers</a>\n<a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"/posts\">Posts</a>\n<a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"/articles\">Articles</a>\n\n<mat-divider></mat-divider>\n\n<h2 matSubheader>Tools</h2>\n\n<a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"/contacts\">\n    <mat-icon>import_contacts</mat-icon>\n    Contacts\n</a>\n\n<a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"/contacts\">\n    <mat-icon>contact_phone</mat-icon>\n    Leads\n</a>\n<a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"/contacts\">\n    <mat-icon>import_contacts</mat-icon>\n    Contacts\n</a>\n\n<a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"/contacts\">\n    <mat-icon>contact_phone</mat-icon>\n    Leads\n</a>\n\n</mat-nav-list>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatListModule } from '@angular/material/list';\n\n\n\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [\n    HeaderComponent,\n    FooterComponent,\n    SidebarComponent,\n  ],\n  imports: [\n    CommonModule,\n    MatDividerModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    MatMenuModule,\n    MatListModule,\n\n    RouterModule\n  ],\n  exports:[\n    HeaderComponent,FooterComponent,SidebarComponent\n  ]\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}